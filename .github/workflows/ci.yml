name: CI for Dev Branch

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Cache Gradle
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-

    - name: Grant permission for gradlew
      run: chmod +x ./gradlew
      
    - name: Clean and Build (without tests)
      run: ./gradlew clean build -x test

    - name: Run Tests
      run: ./gradlew test --continue
      
    - name: Upload test report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-report
        path: build/reports/tests/test

    - name: Notify Discord
      if: always()
      run: |
        STATUS="${{ job.status }}"
        if [ "$STATUS" = "success" ]; then
          MESSAGE="âœ… í…ŒìŠ¤íŠ¸ ì„±ê³µ: [${{ github.repository }}](${{ github.server_url }}/${{ github.repository }}) @ ${{ github.ref_name }} - ì»¤ë°‹: ${{ github.sha }}"
        else
          MESSAGE="ðŸš¨ í…ŒìŠ¤íŠ¸ ì‹¤íŒ¨: [${{ github.repository }}](${{ github.server_url }}/${{ github.repository }}) @ ${{ github.ref_name }} - ì»¤ë°‹: ${{ github.sha }}"
        fi

        curl -H "Content-Type: application/json" \
          -X POST \
          -d "{\"content\": \"$MESSAGE\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
